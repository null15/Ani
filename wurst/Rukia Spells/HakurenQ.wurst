package HakurenQ

//import Abilities
//import AbilityIds

trigger gg_trg_Hakuren
sound rukiaQ1
sound rukiaQ2

init

    initTrig_Hakuren()

function hakurenCond() returns boolean
    return GetSpellAbilityId() == 'A0NS' and udg_B == true

function hakurenCast3()
    let t=GetExpiredTimer()
    let id=GetHandleId(t)
    let u=LoadUnitHandle(h, id, 0)
    let l__d=LoadUnitHandle(h, id, 7)
    let a=LoadReal(h, id, 11)
    let dist=LoadReal(h, id, 2)
    let x=GetUnitX(l__d) + 45 * Cos(a)
    let y=GetUnitY(l__d) + 45 * Sin(a)
    let dmg=LoadReal(h, id, 4)
    let p=GetOwningPlayer(u)
    let g=LoadGroupHandle(h, id, 12)

    if dist > 0 and RectContainsUnit(GetWorldBounds(), l__d) and UnitIsAlive(l__d)
        SetUnitX(l__d, x)
        SetUnitY(l__d, y)
        DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Undead\\ImpaleTargetDust\\ImpaleTargetDust.mdl", x, y))
        n=CreateUnit(p, 'e01X', x, y, a * bj_RADTODEG)
        UnitApplyTimedLife(n, 1, 1)
        SetUnitScale(n, 5, 5, 5)
        SetUnitTimeScale(n, 10)
        GroupEnumUnitsInRange(g, x, y, 155, Base)
        idg=GetHandleId(g)
        SaveReal(h, id, 2, dist - 45)
        IssueTargetOrder(n, "cripple", E)
        while true
            E=FirstOfGroup(g)
            ide=GetHandleId(E)
            if Condition_Base(p , E) and LoadUnitHandle(h, idg, ide) != E
                UnitDamageTarget(u, E, dmg, false, false, null, null, null)
                SaveUnitHandle(h, idg, ide, E)
                KillUnit(l__d)
            
            GroupRemoveUnit(g, E)
            if E == null
                break

    else
        GroupEnumUnitsInRange(g, x, y, 750, Base)
        while true
            E=FirstOfGroup(g)
            ide=GetHandleId(E)
            if Condition_Base(p , E) and LoadUnitHandle(h, idg, ide) != E
                UnitDamageTarget(u, E, dmg, false, false, null, null, null)
            
            GroupRemoveUnit(g, E)
            if E == null
                break

        ShakeCamera(0.5 , 20)
        UnitApplyTimedLife(CreateUnit(p, 'e01X', x, y, GetRandomReal(0, 359)), 1, 3)
        UnitApplyTimedLife(CreateUnit(p, 'e01X', x, y, GetRandomReal(0, 359)), 1, 3)
        UnitApplyTimedLife(CreateUnit(p, 'e01X', x, y, GetRandomReal(0, 359)), 1, 3)
        UnitApplyTimedLife(CreateUnit(p, 'e01X', x, y, GetRandomReal(0, 359)), 1, 4)
        UnitApplyTimedLife(CreateUnit(p, 'e01X', x, y, GetRandomReal(0, 359)), 1, 3)
        UnitApplyTimedLife(CreateUnit(p, 'e01X', x, y, GetRandomReal(0, 359)), 1, 3)
        UnitApplyTimedLife(CreateUnit(p, 'e01X', x, y, GetRandomReal(0, 359)), 1, 3)

        RemoveUnit(l__d)
        PauseUnit(u, false)
        FlushChildHashtable(h, GetHandleId(g))
        DestroyGroup(g)
        PauseTimer(t)
        DestroyTimer(t)
        FlushChildHashtable(h, id)



function hakurenCast2()
    let t=GetExpiredTimer()
    let id=GetHandleId(t)
    let u=LoadUnitHandle(h, id, 0)
    let l__d=LoadUnitHandle(h, id, 7)
    let x=GetUnitX(u)
    let y=GetUnitY(u)
    let x1=LoadReal(h, id, 5)
    let y1=LoadReal(h, id, 6)
    let a=Atan2(y1 - y, x1 - x)
    let p=GetOwningPlayer(u)
    let dmg=LoadReal(h, id, 4)
    let dist=LoadReal(h, id, 2)
    let scale=LoadReal(h, id, 10)

    if GetUnitCurrentOrder(u) == OrderId("channel")
        n=CreateUnit(p, 'e01X', x, y, GetRandomReal(0, 359))
        UnitApplyTimedLife(n, 1, 0.01)
        SetUnitVertexColor(n, 255, 220, 40, 50)
        SaveReal(h, id, 4, dmg + 0.3 * GetHeroAgi(u, true))
        SaveReal(h, id, 2, dist + 35)
        SetUnitX(l__d, x + 40 * Cos(a - 130 * bj_DEGTORAD))
        SetUnitY(l__d, y + 40 * Sin(a - 130 * bj_DEGTORAD))
        SaveReal(h, id, 10, scale + 0.005)
        SetUnitScale(l__d, scale, scale, scale)
    else
        UnitApplyTimedLife(CreateUnit(p, 'e01X', x + 5 * Cos(a), y + 5 * Sin(a), a * bj_RADTODEG), 1, 1)
        StopSound(LoadSoundHandle(h, id, 16), true, true)


        rukiaQ2 = CreateSound("RukiaQ2.mp3", false, false, false, 0, 0, "DEFAULTEAXON")
        StopSound(rukiaQ1, false, false)
        PlaySoundBJ(rukiaQ2)


        SetUnitTimeScale(u, 1)
        UnitAddAbility(l__d, 'A0NN')
        SetUnitAnimation(u, "Spell Throw")
        SetUnitScale(l__d, scale + 50, scale + 50, scale + 50)
        PauseTimer(t)
        TimerStart(t, 0.02, true, function hakurenCast3)



function hakurenCast()
    let u=GetTriggerUnit()
    let t=CreateTimer()
    let id=GetHandleId(t)
    let p=GetOwningPlayer(u)
    let x=GetUnitX(u)
    let y=GetUnitY(u)
    let x1=GetSpellTargetX()
    let y1=GetSpellTargetY()
    let a=Atan2(y1 - y, x1 - x)
    let ang=130 * bj_DEGTORAD

    SaveUnitHandle(h, id, 0, u)
    SaveReal(h, id, 5, x1)
    SaveReal(h, id, 6, y1)
    SaveReal(h, id, 4, 500)
    SaveReal(h, id, 2, 2000)
    SaveReal(h, id, 10, 1.25)
    SaveReal(h, id, 11, a)
    SetUnitTimeScale(u, 0)
    SaveGroupHandle(h, id, 12, CreateGroup())
    SaveUnitHandle(h, id, 7, CreateUnit(p, 'e01X', x + 5 * Cos(a - ang), y + 5 * Sin(a - ang), a * bj_RADTODEG))

    rukiaQ1 = CreateSound("RukiaQ1.mp3", false, false, false, 0, 0, "DEFAULTEAXON")
    StopSound(rukiaQ2, false, false)
    PlaySoundBJ(rukiaQ1)

    TimerStart(t, 0.1, true, function hakurenCast2)


function initTrig_Hakuren()
    gg_trg_Hakuren=CreateTrigger()
    TriggerRegisterAnyUnitEventBJ(gg_trg_Hakuren, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    TriggerAddCondition(gg_trg_Hakuren, Condition(function hakurenCond))
    TriggerAddAction(gg_trg_Hakuren, function hakurenCast)

